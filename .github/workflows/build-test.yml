name: tests

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

env:
  IMAGE_TAG: "${{ github.run_number }}"
  IMAGE_MAIN: ghcr.io/${{ github.repository_owner }}/calllogger

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade --no-cache-dir pip
          pip install --no-cache-dir tox

      - name: Test using tox
        run: |
          tox

      - name: Upload test coverage to Codecov
        continue-on-error: true
        uses: codecov/codecov-action@v2.1.0
        with:
          flags: unittests

  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install test dependencies
        run: |
          python -m pip install flake8

      - name: Test with flake8
        run: |
          flake8 src

  docker:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [tests, flake8]
    outputs:
      digest: ${{ steps.docker_build.outputs.digest }}
    steps:
      - uses: actions/checkout@v3
      - name: Set Environment Variables
        run: |
          echo "BUILD_DATE=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
          echo "SENTRY_DSN=$(echo -n '${{ secrets.SENTRY_DSN }}' | base64 -w 0)" >> $GITHUB_ENV
          echo "REG_KEY=$(echo -n '${{ secrets.REG_KEY }}' | base64 -w 0)" >> $GITHUB_ENV

      - name: Login to Github Container Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Build/Push Container Image
        id: docker_build
        uses: docker/build-push-action@v2.10.0
        with:
          push: true
          file: Dockerfile
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
          tags: |
            ${{ env.IMAGE_MAIN }}:latest
            ${{ env.IMAGE_MAIN }}:${{ env.IMAGE_TAG }}
          build-args: |
            SENTRY_DSN=ZW5jb2RlZDo=${{ env.SENTRY_DSN }}
            REG_KEY=ZW5jb2RlZDo=${{ env.REG_KEY }}
            VERSION=${{ env.IMAGE_TAG }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.created=${{ env.BUILD_DATE }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  mender:
    runs-on: ubuntu-latest
    needs: [docker]
    steps:
      - uses: actions/checkout@v3

      - id: mender
        name: Create mender artifact
        uses: quartx-analytics/mender-docker-compose@main
        with:
          compose-file: docker-compose.yml
          compose-file-variables: IMAGE_TAG=${{ env.IMAGE_TAG }} ENVIRONMENT=Mender
          software-name: calllogger
          software-version: ${{ env.IMAGE_TAG }}
          device-types: raspberrypi3 raspberrypi4
          signing-key: ${{ secrets.ARTIFACT_SIGNING_KEY }}

      - name: Upload mender artifact
        uses: quartx-analytics/mender-artifact-uploader@main
        with:
          artifact: ${{ steps.mender.outputs.artifact-file }}
          username: ${{ secrets.MENDER_USER }}
          password: ${{ secrets.MENDER_PASS }}
