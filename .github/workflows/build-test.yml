name: tests

on:
  push:
    branches: [ rework ]

env:
  IMAGE: ghcr.io/${{ github.repository_owner }}/calllogger

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade --no-cache-dir pip
          pip install --no-cache-dir tox

      - name: Test using tox
        run: |
          tox

      - name: Upload test coverage to Codecov
        continue-on-error: true
        uses: codecov/codecov-action@v1
        with:
          flags: unittests

  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install test dependencies
        run: |
          python -m pip install flake8

      - name: Test with flake8
        run: |
          flake8 src

  docker:
    runs-on: ubuntu-latest
    needs: [tests, flake8]
    steps:
      - uses: actions/checkout@v2

      - name: Set Environment Variables
        run: |
          echo "BUILD_DATE=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build/Push Container Image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: Dockerfile
          tags: |
            ${{ env.IMAGE }}:latest
          secrets: |
            SENTRY_DSN=${{ secrets.SENTRY_DSN }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.created=${{ env.BUILD_DATE }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE }}:latest
          cache-to: type=inline

  anchore:
    runs-on: ubuntu-latest
    needs: [docker]
    steps:
      - name: Docker Security Scan with Anchore
        uses: anchore/scan-action@v2
        id: scan
        with:
          image: ${{ env.IMAGE }}
          acs-report-enable: true

      - name: Upload Anchore Report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
