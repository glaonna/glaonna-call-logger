name: CI

on:
  - push
  - pull_request

env:
  IMAGE_MAIN: ghcr.io/${{ github.repository_owner }}/calllogger
  PYTHON_VERSION: "3.10"

jobs:
  python-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install test dependencies
        run: |
          python -m pip install flake8 Flake8-pyproject

      - name: Lint with flake8
        run: |
          flake8 src

  docker-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          ignore: DL3042

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade --no-cache-dir pip
          python -m pip install --no-cache-dir -r requirements-test.txt
          pip install --no-cache-dir --no-deps .

      - name: Test
        run: |
          pytest --cov=calllogger --cov-report xml

      - name: Upload test coverage to Codecov
        continue-on-error: true
        uses: codecov/codecov-action@v3.1.1
        with:
          flags: unittests

  docker-depot:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [docker-lint, python-lint, tests]
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Setup Depot Build
        uses: depot/setup-action@v1

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_MAIN }}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=ref,event=pr
          labels: |
            org.opencontainers.image.title=Calllogger

      - name: Build/Push Container Image
        uses: depot/build-push-action@v1
        with:
          project: ${{ vars.DEPOT_PROJECT_ID }}
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64, linux/arm64, linux/arm/v7
          build-args: |
            REG_KEY=${{ secrets.REG_KEY }}
            SENTRY_DSN=${{ secrets.SENTRY_DSN }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
